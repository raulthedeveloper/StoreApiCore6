// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreApiCore.Models;

#nullable disable

namespace StoreApiCore.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20220415195100_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("StoreApiCore.Models.Cart", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("cartId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("custId")
                        .HasColumnType("int");

                    b.Property<int>("prodId")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("custId");

                    b.HasIndex("prodId");

                    b.ToTable("cart");
                });

            modelBuilder.Entity("StoreApiCore.Models.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("StoreApiCore.Models.Customer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("customer");
                });

            modelBuilder.Entity("StoreApiCore.Models.HoursModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Friday")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Monday")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Saturday")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sunday")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Thursday")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tuesday")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Wednesday")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("hours");
                });

            modelBuilder.Entity("StoreApiCore.Models.LocationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("postalCode")
                        .HasColumnType("int");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("location");
                });

            modelBuilder.Entity("StoreApiCore.Models.Products", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("catId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("catId");

                    b.ToTable("products");
                });

            modelBuilder.Entity("StoreApiCore.Models.Sales", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("prodId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("prodId");

                    b.ToTable("sales");
                });

            modelBuilder.Entity("StoreApiCore.Models.UnitedStates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("stateCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("stateName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("UnitedStates");
                });

            modelBuilder.Entity("StoreApiCore.Models.Cart", b =>
                {
                    b.HasOne("StoreApiCore.Models.Customer", "customer")
                        .WithMany()
                        .HasForeignKey("custId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreApiCore.Models.Products", "product")
                        .WithMany()
                        .HasForeignKey("prodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");

                    b.Navigation("product");
                });

            modelBuilder.Entity("StoreApiCore.Models.HoursModel", b =>
                {
                    b.HasOne("StoreApiCore.Models.LocationModel", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("StoreApiCore.Models.Products", b =>
                {
                    b.HasOne("StoreApiCore.Models.Category", "category")
                        .WithMany()
                        .HasForeignKey("catId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("StoreApiCore.Models.Sales", b =>
                {
                    b.HasOne("StoreApiCore.Models.Products", "product")
                        .WithMany()
                        .HasForeignKey("prodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");
                });
#pragma warning restore 612, 618
        }
    }
}
